{"ast":null,"code":"var _jsxFileName = \"/Users/rongsiu/Desktop/tesla/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { logo, language } from './assets';\nimport { BATTERY_TYPES } from \"./constants\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transformerCount, setTransformerCount] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [totalEnergy, setTotalEnergy] = useState(0);\n  const [totalSize, setTotalSize] = useState(0);\n  const [batteries, setBatteries] = useState([]);\n  const [counts, setCounts] = useState({\n    mpxl: 0,\n    mp2: 0,\n    mp: 0,\n    pp: 0\n  });\n  useEffect(() => {\n    fetch('http://localhost:8000/load-state').then(response => response.json()).then(data => {\n      if (data) {\n        setCounts(data.counts || {});\n        setTransformerCount(data.transformerCount || 0);\n        setTotalCost(data.totalCost || 0);\n        setTotalEnergy(data.totalEnergy || 0);\n        setTotalSize(data.totalSize || 0);\n        setBatteries(data.batteries || []);\n      }\n    });\n  }, []);\n  useEffect(() => {\n    getTotals();\n    getBatteries(counts);\n    saveState();\n  }, [counts]);\n  const saveState = () => {\n    const state = {\n      transformerCount,\n      totalCost,\n      totalEnergy,\n      totalSize,\n      batteries,\n      counts\n    };\n    fetch('http://localhost:8000/save-state', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(state)\n    });\n  };\n  const getBatteries = counts => {\n    const items = [];\n    const countItems = Object.entries(counts);\n    let size = 0;\n    let idx = 0;\n    countItems.forEach(([battery, count]) => {\n      while (count > 0) {\n        const item = {\n          id: `${battery}_${idx}`,\n          x: idx % 2 === 0 ? 0 : idx % 2 * size,\n          y: Math.floor(idx / 2) * 100,\n          name: BATTERY_TYPES[battery].name,\n          type: battery\n        };\n        items.push(item);\n        if (idx % 2 !== 0) {\n          items.push({\n            id: `t_${idx}`,\n            x: 900,\n            y: Math.floor(idx / 2) * 100,\n            name: BATTERY_TYPES[\"t\"].name,\n            type: \"t\"\n          });\n        }\n        count--;\n        idx++;\n        size = BATTERY_TYPES[battery].size;\n      }\n    });\n    setBatteries(items);\n  };\n  const getTransformerCount = updatedCounts => {\n    const total = Object.values(updatedCounts).reduce((acc, curr) => acc + curr, 0);\n    return Math.floor(total / 2);\n  };\n  const handleQuantityChange = (e, id) => {\n    const newCounts = {\n      ...counts,\n      [id]: parseInt(e.target.value, 10)\n    };\n    setCounts(newCounts);\n    setTransformerCount(getTransformerCount(newCounts));\n  };\n  const getTotals = () => {\n    const cost = BATTERY_TYPES.mpxl.cost * counts.mpxl + BATTERY_TYPES.mp2.cost * counts.mp2 + BATTERY_TYPES.mp.cost * counts.mp + BATTERY_TYPES.pp.cost * counts.pp + BATTERY_TYPES.t.cost * transformerCount;\n    const energy = BATTERY_TYPES.mpxl.energy * counts.mpxl + BATTERY_TYPES.mp2.energy * counts.mp2 + BATTERY_TYPES.mp.energy * counts.mp + BATTERY_TYPES.pp.energy * counts.pp + BATTERY_TYPES.t.energy * transformerCount;\n    const size = BATTERY_TYPES.mpxl.size * counts.mpxl + BATTERY_TYPES.mp2.size * counts.mp2 + BATTERY_TYPES.mp.size * counts.mp + BATTERY_TYPES.pp.size * counts.pp + BATTERY_TYPES.t.size * transformerCount;\n    setTotalCost(cost);\n    setTotalEnergy(energy);\n    setTotalSize(size);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: language,\n        className: \"language\",\n        alt: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Battery Configurator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"total-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `$${totalCost.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Energy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${totalEnergy} MWh`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"total-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${totalSize} FTÂ²`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Battery Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Cost/unit ($)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Energy/unit (MWh)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 5\n            }, this), Object.values(BATTERY_TYPES).map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.cost.toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: item.energy\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  \"aria-label\": \"quantity count\",\n                  disabled: item.id === \"t\",\n                  max: \"1000\",\n                  min: \"0\",\n                  type: \"number\",\n                  value: item.id === \"t\" ? transformerCount : counts[item.id],\n                  onChange: e => handleQuantityChange(e, item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 9\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 7\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"caption\",\n            children: \"1 transformer is added for every 2 batteries purchased\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: batteries.map(battery => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: battery.id,\n          className: `battery ${battery.type}`,\n          style: {\n            left: `${battery.x}px`,\n            top: `${battery.y}px`\n          },\n          children: battery.name\n        }, battery.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"qo55imqdHaJ144TFVOwoDGVF4pc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","logo","language","BATTERY_TYPES","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","transformerCount","setTransformerCount","totalCost","setTotalCost","totalEnergy","setTotalEnergy","totalSize","setTotalSize","batteries","setBatteries","counts","setCounts","mpxl","mp2","mp","pp","fetch","then","response","json","data","getTotals","getBatteries","saveState","state","method","headers","body","JSON","stringify","items","countItems","Object","entries","size","idx","forEach","battery","count","item","id","x","y","Math","floor","name","type","push","getTransformerCount","updatedCounts","total","values","reduce","acc","curr","handleQuantityChange","e","newCounts","parseInt","target","value","cost","t","energy","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","map","disabled","max","min","onChange","style","left","top","_c","$RefreshReg$"],"sources":["/Users/rongsiu/Desktop/tesla/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { logo, language } from './assets';\nimport { BATTERY_TYPES } from \"./constants\"\n\nimport './App.css';\n\nfunction App() {\n  const [transformerCount, setTransformerCount] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [totalEnergy, setTotalEnergy] = useState(0);\n  const [totalSize, setTotalSize] = useState(0);\n  const [batteries, setBatteries] = useState([]);\n  const [counts, setCounts] = useState({\n    mpxl: 0,\n    mp2: 0,\n    mp: 0,\n    pp: 0,\n  });\n\n  useEffect(() => {\n    fetch('http://localhost:8000/load-state')\n      .then(response => response.json())\n      .then(data => {\n        if (data) {\n          setCounts(data.counts || {});\n          setTransformerCount(data.transformerCount || 0);\n          setTotalCost(data.totalCost || 0);\n          setTotalEnergy(data.totalEnergy || 0);\n          setTotalSize(data.totalSize || 0);\n          setBatteries(data.batteries || []);\n        }\n      });\n  }, []);\n\n  useEffect(() => {\n    getTotals();\n    getBatteries(counts);\n    saveState();\n  }, [counts]);\n\n  const saveState = () => {\n    const state = {\n      transformerCount,\n      totalCost,\n      totalEnergy,\n      totalSize,\n      batteries,\n      counts,\n    };\n\n    fetch('http://localhost:8000/save-state', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(state),\n    });\n  };\n\n  const getBatteries = (counts) => {\n    const items = [];\n    const countItems = Object.entries(counts);\n    let size = 0;\n    let idx = 0;\n\n    countItems.forEach(([battery, count]) => {\n      while (count > 0) {\n        const item = {\n          id: `${battery}_${idx}`,\n          x: idx % 2 === 0 ? 0 : idx % 2 * size,\n          y: Math.floor(idx / 2) * 100,\n          name: BATTERY_TYPES[battery].name,\n          type: battery,\n        };\n\n        items.push(item);\n\n        if(idx % 2 !== 0) {\n          items.push({\n            id: `t_${idx}`,\n            x: 900,\n            y: Math.floor(idx / 2) * 100,\n            name: BATTERY_TYPES[\"t\"].name,\n            type: \"t\",\n          })\n        }\n\n        count--;\n        idx++;\n        size = BATTERY_TYPES[battery].size;\n      }\n    });\n\n    setBatteries(items);\n  };\n\n  const getTransformerCount = (updatedCounts) => {\n    const total = Object.values(updatedCounts).reduce((acc, curr) => acc + curr, 0);\n    return Math.floor(total / 2);\n  };\n\n  const handleQuantityChange = (e, id) => {\n    const newCounts = {\n      ...counts,\n      [id]: parseInt(e.target.value, 10),\n    };\n\n    setCounts(newCounts);\n    setTransformerCount(getTransformerCount(newCounts));\n  };\n\n  const getTotals = () => {\n    const cost = BATTERY_TYPES.mpxl.cost * counts.mpxl + BATTERY_TYPES.mp2.cost * counts.mp2 + BATTERY_TYPES.mp.cost * counts.mp + BATTERY_TYPES.pp.cost * counts.pp + BATTERY_TYPES.t.cost * transformerCount;\n    const energy = BATTERY_TYPES.mpxl.energy * counts.mpxl + BATTERY_TYPES.mp2.energy * counts.mp2 + BATTERY_TYPES.mp.energy * counts.mp + BATTERY_TYPES.pp.energy * counts.pp + BATTERY_TYPES.t.energy * transformerCount;\n    const size = BATTERY_TYPES.mpxl.size * counts.mpxl + BATTERY_TYPES.mp2.size * counts.mp2 + BATTERY_TYPES.mp.size * counts.mp + BATTERY_TYPES.pp.size * counts.pp + BATTERY_TYPES.t.size * transformerCount;\n\n    setTotalCost(cost);\n    setTotalEnergy(energy);\n    setTotalSize(size);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <img src={logo} className=\"logo\" alt=\"Logo\" />\n        <img src={language} className=\"language\" alt=\"Language\" />\n      </div>\n\n      <div className=\"main\">\n        <div className=\"dashboard\">\n          <div className=\"total\">\n            <div className=\"title\">Battery Configurator</div>\n            <div className=\"total-container\">\n              <div className=\"total-item\">\n                <p>Total Cost</p>\n                <p>{`$${totalCost.toLocaleString()}`}</p>\n              </div>\n              <div className=\"total-item\">\n                <p>Total Energy</p>\n                <p>{`${totalEnergy} MWh`}</p>\n              </div>\n              <div className=\"total-item\">\n                <p>Total Size</p>\n                <p>{`${totalSize} FTÂ²`}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"quantity\">\n  <div className=\"grid-container\">\n    <div className=\"grid-header\">\n      <div>Battery Type</div>\n      <div>Cost/unit ($)</div>\n      <div>Energy/unit (MWh)</div>\n      <div>Quantity</div>\n    </div>\n    {Object.values(BATTERY_TYPES).map((item) => (\n      <div key={item.id} className=\"grid-item\">\n        <div>{item.name}</div>\n        <div>{item.cost.toLocaleString()}</div>\n        <div>{item.energy}</div>\n        <div>\n          <input\n            aria-label=\"quantity count\"\n            disabled={item.id === \"t\"}\n            max=\"1000\"\n            min=\"0\"\n            type=\"number\"\n            value={item.id === \"t\" ? transformerCount : counts[item.id]}\n            onChange={(e) => handleQuantityChange(e, item.id)}\n          />\n        </div>\n      </div>\n    ))}\n  </div>\n  <span className=\"caption\">1 transformer is added for every 2 batteries purchased</span>\n</div>\n        </div>\n        <div className=\"container\">\n          {batteries.map((battery) => (\n            <div\n              key={battery.id}\n              id={battery.id}\n              className={`battery ${battery.type}`}\n              style={{ left: `${battery.x}px`, top: `${battery.y}px` }}\n            >\n              {battery.name}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,QAAQ,QAAQ,UAAU;AACzC,SAASC,aAAa,QAAQ,aAAa;AAE3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC;IACnCsB,IAAI,EAAE,CAAC;IACPC,GAAG,EAAE,CAAC;IACNC,EAAE,EAAE,CAAC;IACLC,EAAE,EAAE;EACN,CAAC,CAAC;EAEF1B,SAAS,CAAC,MAAM;IACd2B,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,IAAIA,IAAI,EAAE;QACRT,SAAS,CAACS,IAAI,CAACV,MAAM,IAAI,CAAC,CAAC,CAAC;QAC5BT,mBAAmB,CAACmB,IAAI,CAACpB,gBAAgB,IAAI,CAAC,CAAC;QAC/CG,YAAY,CAACiB,IAAI,CAAClB,SAAS,IAAI,CAAC,CAAC;QACjCG,cAAc,CAACe,IAAI,CAAChB,WAAW,IAAI,CAAC,CAAC;QACrCG,YAAY,CAACa,IAAI,CAACd,SAAS,IAAI,CAAC,CAAC;QACjCG,YAAY,CAACW,IAAI,CAACZ,SAAS,IAAI,EAAE,CAAC;MACpC;IACF,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACdgC,SAAS,CAAC,CAAC;IACXC,YAAY,CAACZ,MAAM,CAAC;IACpBa,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACb,MAAM,CAAC,CAAC;EAEZ,MAAMa,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAG;MACZxB,gBAAgB;MAChBE,SAAS;MACTE,WAAW;MACXE,SAAS;MACTE,SAAS;MACTE;IACF,CAAC;IAEDM,KAAK,CAAC,kCAAkC,EAAE;MACxCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,KAAK;IAC5B,CAAC,CAAC;EACJ,CAAC;EAED,MAAMF,YAAY,GAAIZ,MAAM,IAAK;IAC/B,MAAMoB,KAAK,GAAG,EAAE;IAChB,MAAMC,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACvB,MAAM,CAAC;IACzC,IAAIwB,IAAI,GAAG,CAAC;IACZ,IAAIC,GAAG,GAAG,CAAC;IAEXJ,UAAU,CAACK,OAAO,CAAC,CAAC,CAACC,OAAO,EAAEC,KAAK,CAAC,KAAK;MACvC,OAAOA,KAAK,GAAG,CAAC,EAAE;QAChB,MAAMC,IAAI,GAAG;UACXC,EAAE,EAAE,GAAGH,OAAO,IAAIF,GAAG,EAAE;UACvBM,CAAC,EAAEN,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGA,GAAG,GAAG,CAAC,GAAGD,IAAI;UACrCQ,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACT,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;UAC5BU,IAAI,EAAEpD,aAAa,CAAC4C,OAAO,CAAC,CAACQ,IAAI;UACjCC,IAAI,EAAET;QACR,CAAC;QAEDP,KAAK,CAACiB,IAAI,CAACR,IAAI,CAAC;QAEhB,IAAGJ,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;UAChBL,KAAK,CAACiB,IAAI,CAAC;YACTP,EAAE,EAAE,KAAKL,GAAG,EAAE;YACdM,CAAC,EAAE,GAAG;YACNC,CAAC,EAAEC,IAAI,CAACC,KAAK,CAACT,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG;YAC5BU,IAAI,EAAEpD,aAAa,CAAC,GAAG,CAAC,CAACoD,IAAI;YAC7BC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ;QAEAR,KAAK,EAAE;QACPH,GAAG,EAAE;QACLD,IAAI,GAAGzC,aAAa,CAAC4C,OAAO,CAAC,CAACH,IAAI;MACpC;IACF,CAAC,CAAC;IAEFzB,YAAY,CAACqB,KAAK,CAAC;EACrB,CAAC;EAED,MAAMkB,mBAAmB,GAAIC,aAAa,IAAK;IAC7C,MAAMC,KAAK,GAAGlB,MAAM,CAACmB,MAAM,CAACF,aAAa,CAAC,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,EAAE,CAAC,CAAC;IAC/E,OAAOX,IAAI,CAACC,KAAK,CAACM,KAAK,GAAG,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMK,oBAAoB,GAAGA,CAACC,CAAC,EAAEhB,EAAE,KAAK;IACtC,MAAMiB,SAAS,GAAG;MAChB,GAAG/C,MAAM;MACT,CAAC8B,EAAE,GAAGkB,QAAQ,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,EAAE,EAAE;IACnC,CAAC;IAEDjD,SAAS,CAAC8C,SAAS,CAAC;IACpBxD,mBAAmB,CAAC+C,mBAAmB,CAACS,SAAS,CAAC,CAAC;EACrD,CAAC;EAED,MAAMpC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMwC,IAAI,GAAGpE,aAAa,CAACmB,IAAI,CAACiD,IAAI,GAAGnD,MAAM,CAACE,IAAI,GAAGnB,aAAa,CAACoB,GAAG,CAACgD,IAAI,GAAGnD,MAAM,CAACG,GAAG,GAAGpB,aAAa,CAACqB,EAAE,CAAC+C,IAAI,GAAGnD,MAAM,CAACI,EAAE,GAAGrB,aAAa,CAACsB,EAAE,CAAC8C,IAAI,GAAGnD,MAAM,CAACK,EAAE,GAAGtB,aAAa,CAACqE,CAAC,CAACD,IAAI,GAAG7D,gBAAgB;IAC1M,MAAM+D,MAAM,GAAGtE,aAAa,CAACmB,IAAI,CAACmD,MAAM,GAAGrD,MAAM,CAACE,IAAI,GAAGnB,aAAa,CAACoB,GAAG,CAACkD,MAAM,GAAGrD,MAAM,CAACG,GAAG,GAAGpB,aAAa,CAACqB,EAAE,CAACiD,MAAM,GAAGrD,MAAM,CAACI,EAAE,GAAGrB,aAAa,CAACsB,EAAE,CAACgD,MAAM,GAAGrD,MAAM,CAACK,EAAE,GAAGtB,aAAa,CAACqE,CAAC,CAACC,MAAM,GAAG/D,gBAAgB;IACtN,MAAMkC,IAAI,GAAGzC,aAAa,CAACmB,IAAI,CAACsB,IAAI,GAAGxB,MAAM,CAACE,IAAI,GAAGnB,aAAa,CAACoB,GAAG,CAACqB,IAAI,GAAGxB,MAAM,CAACG,GAAG,GAAGpB,aAAa,CAACqB,EAAE,CAACoB,IAAI,GAAGxB,MAAM,CAACI,EAAE,GAAGrB,aAAa,CAACsB,EAAE,CAACmB,IAAI,GAAGxB,MAAM,CAACK,EAAE,GAAGtB,aAAa,CAACqE,CAAC,CAAC5B,IAAI,GAAGlC,gBAAgB;IAE1MG,YAAY,CAAC0D,IAAI,CAAC;IAClBxD,cAAc,CAAC0D,MAAM,CAAC;IACtBxD,YAAY,CAAC2B,IAAI,CAAC;EACpB,CAAC;EAED,oBACEvC,OAAA,CAAAE,SAAA;IAAAmE,QAAA,gBACErE,OAAA;MAAKsE,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACrBrE,OAAA;QAAKuE,GAAG,EAAE3E,IAAK;QAAC0E,SAAS,EAAC,MAAM;QAACE,GAAG,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9C5E,OAAA;QAAKuE,GAAG,EAAE1E,QAAS;QAACyE,SAAS,EAAC,UAAU;QAACE,GAAG,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eAEN5E,OAAA;MAAKsE,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACnBrE,OAAA;QAAKsE,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBrE,OAAA;UAAKsE,SAAS,EAAC,OAAO;UAAAD,QAAA,gBACpBrE,OAAA;YAAKsE,SAAS,EAAC,OAAO;YAAAD,QAAA,EAAC;UAAoB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACjD5E,OAAA;YAAKsE,SAAS,EAAC,iBAAiB;YAAAD,QAAA,gBAC9BrE,OAAA;cAAKsE,SAAS,EAAC,YAAY;cAAAD,QAAA,gBACzBrE,OAAA;gBAAAqE,QAAA,EAAG;cAAU;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACjB5E,OAAA;gBAAAqE,QAAA,EAAI,IAAI9D,SAAS,CAACsE,cAAc,CAAC,CAAC;cAAE;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eACN5E,OAAA;cAAKsE,SAAS,EAAC,YAAY;cAAAD,QAAA,gBACzBrE,OAAA;gBAAAqE,QAAA,EAAG;cAAY;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACnB5E,OAAA;gBAAAqE,QAAA,EAAI,GAAG5D,WAAW;cAAM;gBAAAgE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACN5E,OAAA;cAAKsE,SAAS,EAAC,YAAY;cAAAD,QAAA,gBACzBrE,OAAA;gBAAAqE,QAAA,EAAG;cAAU;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,eACjB5E,OAAA;gBAAAqE,QAAA,EAAI,GAAG1D,SAAS;cAAM;gBAAA8D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACN5E,OAAA;UAAKsE,SAAS,EAAC,UAAU;UAAAD,QAAA,gBACjCrE,OAAA;YAAKsE,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC7BrE,OAAA;cAAKsE,SAAS,EAAC,aAAa;cAAAD,QAAA,gBAC1BrE,OAAA;gBAAAqE,QAAA,EAAK;cAAY;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACvB5E,OAAA;gBAAAqE,QAAA,EAAK;cAAa;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxB5E,OAAA;gBAAAqE,QAAA,EAAK;cAAiB;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC5B5E,OAAA;gBAAAqE,QAAA,EAAK;cAAQ;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC,EACLvC,MAAM,CAACmB,MAAM,CAAC1D,aAAa,CAAC,CAACgF,GAAG,CAAElC,IAAI,iBACrC5C,OAAA;cAAmBsE,SAAS,EAAC,WAAW;cAAAD,QAAA,gBACtCrE,OAAA;gBAAAqE,QAAA,EAAMzB,IAAI,CAACM;cAAI;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACtB5E,OAAA;gBAAAqE,QAAA,EAAMzB,IAAI,CAACsB,IAAI,CAACW,cAAc,CAAC;cAAC;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvC5E,OAAA;gBAAAqE,QAAA,EAAMzB,IAAI,CAACwB;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACxB5E,OAAA;gBAAAqE,QAAA,eACErE,OAAA;kBACE,cAAW,gBAAgB;kBAC3B+E,QAAQ,EAAEnC,IAAI,CAACC,EAAE,KAAK,GAAI;kBAC1BmC,GAAG,EAAC,MAAM;kBACVC,GAAG,EAAC,GAAG;kBACP9B,IAAI,EAAC,QAAQ;kBACbc,KAAK,EAAErB,IAAI,CAACC,EAAE,KAAK,GAAG,GAAGxC,gBAAgB,GAAGU,MAAM,CAAC6B,IAAI,CAACC,EAAE,CAAE;kBAC5DqC,QAAQ,EAAGrB,CAAC,IAAKD,oBAAoB,CAACC,CAAC,EAAEjB,IAAI,CAACC,EAAE;gBAAE;kBAAA4B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnD;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CAAC;YAAA,GAdEhC,IAAI,CAACC,EAAE;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAeZ,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACN5E,OAAA;YAAMsE,SAAS,EAAC,SAAS;YAAAD,QAAA,EAAC;UAAsD;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO,CAAC,eACN5E,OAAA;QAAKsE,SAAS,EAAC,WAAW;QAAAD,QAAA,EACvBxD,SAAS,CAACiE,GAAG,CAAEpC,OAAO,iBACrB1C,OAAA;UAEE6C,EAAE,EAAEH,OAAO,CAACG,EAAG;UACfyB,SAAS,EAAE,WAAW5B,OAAO,CAACS,IAAI,EAAG;UACrCgC,KAAK,EAAE;YAAEC,IAAI,EAAE,GAAG1C,OAAO,CAACI,CAAC,IAAI;YAAEuC,GAAG,EAAE,GAAG3C,OAAO,CAACK,CAAC;UAAK,CAAE;UAAAsB,QAAA,EAExD3B,OAAO,CAACQ;QAAI,GALRR,OAAO,CAACG,EAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMZ,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACxE,EAAA,CA1LQD,GAAG;AAAAmF,EAAA,GAAHnF,GAAG;AA4LZ,eAAeA,GAAG;AAAC,IAAAmF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}