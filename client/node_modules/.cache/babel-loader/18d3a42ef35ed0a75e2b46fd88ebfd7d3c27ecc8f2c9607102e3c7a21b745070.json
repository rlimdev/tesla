{"ast":null,"code":"var _jsxFileName = \"/Users/rongsiu/Desktop/tesla/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// import { QuantitySelector } from \"./components/QuantitySelector\"\n\n// import { megapack, megapack_2, megapack_xl, powerpack } from './assets'; \n\n// import './App.css';\n\n// const data = [{\n//   name: \"MegapackXL\",\n//   cost: \"$120,000\",\n//   energy: \"4 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// }, {\n//   name: \"Megapack2\",\n//   cost: \"$80,000\",\n//   energy: \"3 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Megapack\",\n//   cost: \"$50,000\",\n//   energy: \"2 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Powerpack\",\n//   cost: \"$10,000\",\n//   energy: \"1 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Transformer\",\n//   cost: \"$10,000\",\n//   energy: \"-0.5 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// ]\n\n// const DraggableItem = ({ item, index, onDragStart, onDragOver, onDrop, onDrag }) => {\n//   return (\n//     <div\n//       draggable\n//       onDragStart={(e) => onDragStart(e, index)}\n//       onDragOver={(e) => onDragOver(e)}\n//       onDrop={(e) => onDrop(e, index)}\n//       onDrag={(e) => onDrag(e)}\n//       style={{\n//         padding: '8px',\n//         margin: '4px 0',\n//         border: '1px solid #ccc',\n//         background: '#fff',\n//         cursor: 'move',\n//         position: 'absolute', // Ensure positioning is absolute for X-axis movement\n//         left: item.x, // Use state or props to set X-axis position\n//         top: item.y, // Use state or props to set Y-axis position\n//         transition: 'left 0.2s ease, top 0.2s ease',\n//       }}\n//     >\n//       {item.content}\n//     </div>\n//   );\n// };\n\n// const DragDropList = () => {\n//   const [items, setItems] = useState(\n//     [\n//       { id: 'item-1', content: 'Item 1', x: 0, y: 0 },\n//       { id: 'item-2', content: 'Item 2', x: 100, y: 0 },\n//       { id: 'item-3', content: 'Item 3', x: 200, y: 0 },\n//     ]\n//   );\n\n//   const [draggedItemIndex, setDraggedItemIndex] = useState(null);\n\n//   const handleDragStart = (e, index) => {\n//     setDraggedItemIndex(index);\n//     e.dataTransfer.setData('text/plain', ''); // Required for drag events\n//   };\n\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//   };\n\n//   const handleDrag = (e) => {\n//     // Update item position based on drag events\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     // Update the item position in the state\n//     if (draggedItemIndex !== null) {\n//       setItems(prevItems => {\n//         const updatedItems = [...prevItems];\n//         updatedItems[draggedItemIndex] = { ...updatedItems[draggedItemIndex], x, y };\n//         return updatedItems;\n//       });\n//     }\n//   };\n\n//   const handleDrop = (e, dropIndex) => {\n//     e.preventDefault();\n\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     const updatedItems = [...items];\n//     const draggedItem = updatedItems[draggedItemIndex];\n\n//     // Update position\n//     updatedItems[draggedItemIndex] = { ...draggedItem, x, y };\n\n//     // Reset the dragged item index\n//     setItems(updatedItems);\n//     setDraggedItemIndex(null);\n//   };\n\n//   return (\n//     <div style={{ position: 'relative', width: '500px', height: '500px', border: '1px solid #ccc' }}>\n//       {items.map((item, index) => (\n//         <DraggableItem\n//           key={item.id}\n//           item={item}\n//           index={index}\n//           onDragStart={handleDragStart}\n//           onDragOver={handleDragOver}\n//           onDrop={handleDrop}\n//           onDrag={handleDrag}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// function App() {\n//   console.log(\"hirtd\")\n\n//   // const [list1, setList1] = useState(['Item 1', 'Item 2', 'Item 3']);\n//   // const [list2, setList2] = useState(['Item 4', 'Item 5']);\n\n//   // const handleDropInList1 = (item) => {\n//   //   setList1([...list1, item]);\n//   //   setList2(list2.filter((i) => i !== item));\n//   // };\n\n//   // const handleDropInList2 = (item) => {\n//   //   setList2([...list2, item]);\n//   //   setList1(list1.filter((i) => i !== item));\n//   // };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Battery Configurator</h1>\n//       <div className=\"dashboard\">\n//       <table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th>Battery Type</th>\n//             <th>Cost/Unit</th>\n//             <th>Energy/Unit</th>\n//             <th>Quantity</th>\n//             <th>Total Cost</th>\n//             <th>Total Energy</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {data.map((item, index) => (\n//             <tr key={index}>\n//               <td>{item.name}\n//               {/* <img src={megapack_xl} alt=\"Description of the image\" /> */}\n//               </td>\n//               <td>{item.cost}</td>\n//               <td>{item.energy}</td>\n//               <td>{<div className=\"quantity-selector\">\n//               <input aria-label=\"quantity count\" max=\"1000\" min=\"0\" type=\"number\" value={2}/>\n//             </div>}</td>\n//               <td>{item.totalCost}</td>\n//               <td>{item.totalEnergy}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       </div>\n//       <div>\n//       <DragDropList/>\n//       </div>\n//       {/* <QuantitySelector /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Initial state of boxes as an object\n  const [boxes, setBoxes] = useState({\n    'box1': {\n      id: 'box1',\n      x: 0,\n      y: 0\n    },\n    'box2': {\n      id: 'box2',\n      x: 100,\n      y: 0\n    },\n    'box3': {\n      id: 'box3',\n      x: 200,\n      y: 0\n    }\n  });\n  const containerRef = useRef < HTMLDivElement > null;\n  const draggedBoxId = useRef < string | null > null;\n  const isDragging = useRef < boolean > false;\n  const dragStartCoords = useRef < {\n    startX: number,\n    startY: number,\n    startLeft: number,\n    startTop: number\n  } > {\n    startX: 0,\n    startY: 0,\n    startLeft: 0,\n    startTop: 0\n  };\n  useEffect(() => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n    const onMouseDown = (e, boxId) => {\n      const box = document.getElementById(boxId);\n      if (!box) return;\n      isDragging.current = true;\n      draggedBoxId.current = boxId;\n      dragStartCoords.current.startX = e.clientX;\n      dragStartCoords.current.startY = e.clientY;\n      dragStartCoords.current.startLeft = box.offsetLeft;\n      dragStartCoords.current.startTop = box.offsetTop;\n    };\n    const onMouseUp = () => {\n      isDragging.current = false;\n      draggedBoxId.current = null;\n    };\n    const onMouseMove = e => {\n      if (!isDragging.current || !draggedBoxId.current) return;\n      const boxId = draggedBoxId.current;\n      const box = document.getElementById(boxId);\n      if (!box) return;\n      const nextX = e.clientX - dragStartCoords.current.startX + dragStartCoords.current.startLeft;\n      const nextY = e.clientY - dragStartCoords.current.startY + dragStartCoords.current.startTop;\n      box.style.left = `${nextX}px`;\n      box.style.top = `${nextY}px`;\n    };\n    container.addEventListener('mousemove', onMouseMove);\n    container.addEventListener('mouseup', onMouseUp);\n    container.addEventListener('mouseleave', onMouseUp);\n    return () => {\n      container.removeEventListener('mousemove', onMouseMove);\n      container.removeEventListener('mouseup', onMouseUp);\n      container.removeEventListener('mouseleave', onMouseUp);\n    };\n  }, []);\n  useEffect(() => {\n    // Update box positions in state when positions are changed\n    if (draggedBoxId.current) {\n      const boxId = draggedBoxId.current;\n      const updatedBoxes = {\n        ...boxes\n      };\n      const box = document.getElementById(boxId);\n      if (box) {\n        updatedBoxes[boxId] = {\n          ...updatedBoxes[boxId],\n          x: box.offsetLeft,\n          y: box.offsetTop\n        };\n        setBoxes(updatedBoxes);\n      }\n    }\n  }, [boxes]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"container\",\n      children: Object.values(boxes).map(box => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: box.id,\n        className: \"box\",\n        style: {\n          left: `${box.x}px`,\n          top: `${box.y}px`\n        },\n        onMouseDown: e => onMouseDown(e, box.id),\n        children: box.id\n      }, box.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dXn2QmW+fif5CelzTx27l8xWiGg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","App","_s","boxes","setBoxes","id","x","y","containerRef","HTMLDivElement","draggedBoxId","string","isDragging","boolean","dragStartCoords","startX","number","startY","startLeft","startTop","current","container","onMouseDown","e","boxId","box","document","getElementById","clientX","clientY","offsetLeft","offsetTop","onMouseUp","onMouseMove","nextX","nextY","style","left","top","addEventListener","removeEventListener","updatedBoxes","children","ref","className","Object","values","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rongsiu/Desktop/tesla/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// import { QuantitySelector } from \"./components/QuantitySelector\"\n\n// import { megapack, megapack_2, megapack_xl, powerpack } from './assets'; \n\n// import './App.css';\n\n// const data = [{\n//   name: \"MegapackXL\",\n//   cost: \"$120,000\",\n//   energy: \"4 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// }, {\n//   name: \"Megapack2\",\n//   cost: \"$80,000\",\n//   energy: \"3 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Megapack\",\n//   cost: \"$50,000\",\n//   energy: \"2 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Powerpack\",\n//   cost: \"$10,000\",\n//   energy: \"1 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Transformer\",\n//   cost: \"$10,000\",\n//   energy: \"-0.5 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// ]\n\n\n// const DraggableItem = ({ item, index, onDragStart, onDragOver, onDrop, onDrag }) => {\n//   return (\n//     <div\n//       draggable\n//       onDragStart={(e) => onDragStart(e, index)}\n//       onDragOver={(e) => onDragOver(e)}\n//       onDrop={(e) => onDrop(e, index)}\n//       onDrag={(e) => onDrag(e)}\n//       style={{\n//         padding: '8px',\n//         margin: '4px 0',\n//         border: '1px solid #ccc',\n//         background: '#fff',\n//         cursor: 'move',\n//         position: 'absolute', // Ensure positioning is absolute for X-axis movement\n//         left: item.x, // Use state or props to set X-axis position\n//         top: item.y, // Use state or props to set Y-axis position\n//         transition: 'left 0.2s ease, top 0.2s ease',\n//       }}\n//     >\n//       {item.content}\n//     </div>\n//   );\n// };\n\n// const DragDropList = () => {\n//   const [items, setItems] = useState(\n//     [\n//       { id: 'item-1', content: 'Item 1', x: 0, y: 0 },\n//       { id: 'item-2', content: 'Item 2', x: 100, y: 0 },\n//       { id: 'item-3', content: 'Item 3', x: 200, y: 0 },\n//     ]\n//   );\n\n//   const [draggedItemIndex, setDraggedItemIndex] = useState(null);\n\n//   const handleDragStart = (e, index) => {\n//     setDraggedItemIndex(index);\n//     e.dataTransfer.setData('text/plain', ''); // Required for drag events\n//   };\n\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//   };\n\n//   const handleDrag = (e) => {\n//     // Update item position based on drag events\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     // Update the item position in the state\n//     if (draggedItemIndex !== null) {\n//       setItems(prevItems => {\n//         const updatedItems = [...prevItems];\n//         updatedItems[draggedItemIndex] = { ...updatedItems[draggedItemIndex], x, y };\n//         return updatedItems;\n//       });\n//     }\n//   };\n\n//   const handleDrop = (e, dropIndex) => {\n//     e.preventDefault();\n\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     const updatedItems = [...items];\n//     const draggedItem = updatedItems[draggedItemIndex];\n\n//     // Update position\n//     updatedItems[draggedItemIndex] = { ...draggedItem, x, y };\n\n//     // Reset the dragged item index\n//     setItems(updatedItems);\n//     setDraggedItemIndex(null);\n//   };\n\n//   return (\n//     <div style={{ position: 'relative', width: '500px', height: '500px', border: '1px solid #ccc' }}>\n//       {items.map((item, index) => (\n//         <DraggableItem\n//           key={item.id}\n//           item={item}\n//           index={index}\n//           onDragStart={handleDragStart}\n//           onDragOver={handleDragOver}\n//           onDrop={handleDrop}\n//           onDrag={handleDrag}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// function App() {\n//   console.log(\"hirtd\")\n\n//   // const [list1, setList1] = useState(['Item 1', 'Item 2', 'Item 3']);\n//   // const [list2, setList2] = useState(['Item 4', 'Item 5']);\n\n//   // const handleDropInList1 = (item) => {\n//   //   setList1([...list1, item]);\n//   //   setList2(list2.filter((i) => i !== item));\n//   // };\n\n//   // const handleDropInList2 = (item) => {\n//   //   setList2([...list2, item]);\n//   //   setList1(list1.filter((i) => i !== item));\n//   // };\n\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Battery Configurator</h1>\n//       <div className=\"dashboard\">\n//       <table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th>Battery Type</th>\n//             <th>Cost/Unit</th>\n//             <th>Energy/Unit</th>\n//             <th>Quantity</th>\n//             <th>Total Cost</th>\n//             <th>Total Energy</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {data.map((item, index) => (\n//             <tr key={index}>\n//               <td>{item.name}\n//               {/* <img src={megapack_xl} alt=\"Description of the image\" /> */}\n//               </td>\n//               <td>{item.cost}</td>\n//               <td>{item.energy}</td>\n//               <td>{<div className=\"quantity-selector\">\n//               <input aria-label=\"quantity count\" max=\"1000\" min=\"0\" type=\"number\" value={2}/>\n//             </div>}</td>\n//               <td>{item.totalCost}</td>\n//               <td>{item.totalEnergy}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       </div>\n//       <div>\n//       <DragDropList/>\n//       </div>\n//       {/* <QuantitySelector /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // Initial state of boxes as an object\n  const [boxes, setBoxes] = useState({\n    'box1': { id: 'box1', x: 0, y: 0 },\n    'box2': { id: 'box2', x: 100, y: 0 },\n    'box3': { id: 'box3', x: 200, y: 0 },\n  });\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  const draggedBoxId = useRef<string | null>(null);\n  const isDragging = useRef<boolean>(false);\n  const dragStartCoords = useRef<{ startX: number, startY: number, startLeft: number, startTop: number }>({\n    startX: 0,\n    startY: 0,\n    startLeft: 0,\n    startTop: 0\n  });\n\n  useEffect(() => {\n    if (!containerRef.current) return;\n\n    const container = containerRef.current;\n\n    const onMouseDown = (e: MouseEvent, boxId: string) => {\n      const box = document.getElementById(boxId);\n      if (!box) return;\n\n      isDragging.current = true;\n      draggedBoxId.current = boxId;\n      dragStartCoords.current.startX = e.clientX;\n      dragStartCoords.current.startY = e.clientY;\n      dragStartCoords.current.startLeft = box.offsetLeft;\n      dragStartCoords.current.startTop = box.offsetTop;\n    }\n\n    const onMouseUp = () => {\n      isDragging.current = false;\n      draggedBoxId.current = null;\n    }\n\n    const onMouseMove = (e: MouseEvent) => {\n      if (!isDragging.current || !draggedBoxId.current) return;\n\n      const boxId = draggedBoxId.current;\n      const box = document.getElementById(boxId);\n      if (!box) return;\n\n      const nextX = e.clientX - dragStartCoords.current.startX + dragStartCoords.current.startLeft;\n      const nextY = e.clientY - dragStartCoords.current.startY + dragStartCoords.current.startTop;\n\n      box.style.left = `${nextX}px`;\n      box.style.top = `${nextY}px`;\n    }\n\n    container.addEventListener('mousemove', onMouseMove);\n    container.addEventListener('mouseup', onMouseUp);\n    container.addEventListener('mouseleave', onMouseUp);\n\n    return () => {\n      container.removeEventListener('mousemove', onMouseMove);\n      container.removeEventListener('mouseup', onMouseUp);\n      container.removeEventListener('mouseleave', onMouseUp);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Update box positions in state when positions are changed\n    if (draggedBoxId.current) {\n      const boxId = draggedBoxId.current;\n      const updatedBoxes = { ...boxes };\n      const box = document.getElementById(boxId);\n      if (box) {\n        updatedBoxes[boxId] = {\n          ...updatedBoxes[boxId],\n          x: box.offsetLeft,\n          y: box.offsetTop,\n        };\n        setBoxes(updatedBoxes);\n      }\n    }\n  }, [boxes]);\n\n  return (\n    <main>\n      <div ref={containerRef} className=\"container\">\n        {Object.values(boxes).map(box => (\n          <div\n            key={box.id}\n            id={box.id}\n            className=\"box\"\n            style={{ left: `${box.x}px`, top: `${box.y}px` }}\n            onMouseDown={(e) => onMouseDown(e, box.id)}\n          >\n            {box.id}\n          </div>\n        ))}\n      </div>\n    </main>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IACjC,MAAM,EAAE;MAAEO,EAAE,EAAE,MAAM;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC;IAClC,MAAM,EAAE;MAAEF,EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}