{"ast":null,"code":"var _jsxFileName = \"/Users/rongsiu/Desktop/tesla/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// import { QuantitySelector } from \"./components/QuantitySelector\"\n\n// import { megapack, megapack_2, megapack_xl, powerpack } from './assets'; \n\n// import './App.css';\n\n// const data = [{\n//   name: \"MegapackXL\",\n//   cost: \"$120,000\",\n//   energy: \"4 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// }, {\n//   name: \"Megapack2\",\n//   cost: \"$80,000\",\n//   energy: \"3 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Megapack\",\n//   cost: \"$50,000\",\n//   energy: \"2 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Powerpack\",\n//   cost: \"$10,000\",\n//   energy: \"1 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Transformer\",\n//   cost: \"$10,000\",\n//   energy: \"-0.5 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// ]\n\n// const DraggableItem = ({ item, index, onDragStart, onDragOver, onDrop, onDrag }) => {\n//   return (\n//     <div\n//       draggable\n//       onDragStart={(e) => onDragStart(e, index)}\n//       onDragOver={(e) => onDragOver(e)}\n//       onDrop={(e) => onDrop(e, index)}\n//       onDrag={(e) => onDrag(e)}\n//       style={{\n//         padding: '8px',\n//         margin: '4px 0',\n//         border: '1px solid #ccc',\n//         background: '#fff',\n//         cursor: 'move',\n//         position: 'absolute', // Ensure positioning is absolute for X-axis movement\n//         left: item.x, // Use state or props to set X-axis position\n//         top: item.y, // Use state or props to set Y-axis position\n//         transition: 'left 0.2s ease, top 0.2s ease',\n//       }}\n//     >\n//       {item.content}\n//     </div>\n//   );\n// };\n\n// const DragDropList = () => {\n//   const [items, setItems] = useState(\n//     [\n//       { id: 'item-1', content: 'Item 1', x: 0, y: 0 },\n//       { id: 'item-2', content: 'Item 2', x: 100, y: 0 },\n//       { id: 'item-3', content: 'Item 3', x: 200, y: 0 },\n//     ]\n//   );\n\n//   const [draggedItemIndex, setDraggedItemIndex] = useState(null);\n\n//   const handleDragStart = (e, index) => {\n//     setDraggedItemIndex(index);\n//     e.dataTransfer.setData('text/plain', ''); // Required for drag events\n//   };\n\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//   };\n\n//   const handleDrag = (e) => {\n//     // Update item position based on drag events\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     // Update the item position in the state\n//     if (draggedItemIndex !== null) {\n//       setItems(prevItems => {\n//         const updatedItems = [...prevItems];\n//         updatedItems[draggedItemIndex] = { ...updatedItems[draggedItemIndex], x, y };\n//         return updatedItems;\n//       });\n//     }\n//   };\n\n//   const handleDrop = (e, dropIndex) => {\n//     e.preventDefault();\n\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     const updatedItems = [...items];\n//     const draggedItem = updatedItems[draggedItemIndex];\n\n//     // Update position\n//     updatedItems[draggedItemIndex] = { ...draggedItem, x, y };\n\n//     // Reset the dragged item index\n//     setItems(updatedItems);\n//     setDraggedItemIndex(null);\n//   };\n\n//   return (\n//     <div style={{ position: 'relative', width: '500px', height: '500px', border: '1px solid #ccc' }}>\n//       {items.map((item, index) => (\n//         <DraggableItem\n//           key={item.id}\n//           item={item}\n//           index={index}\n//           onDragStart={handleDragStart}\n//           onDragOver={handleDragOver}\n//           onDrop={handleDrop}\n//           onDrag={handleDrag}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// function App() {\n//   console.log(\"hirtd\")\n\n//   // const [list1, setList1] = useState(['Item 1', 'Item 2', 'Item 3']);\n//   // const [list2, setList2] = useState(['Item 4', 'Item 5']);\n\n//   // const handleDropInList1 = (item) => {\n//   //   setList1([...list1, item]);\n//   //   setList2(list2.filter((i) => i !== item));\n//   // };\n\n//   // const handleDropInList2 = (item) => {\n//   //   setList2([...list2, item]);\n//   //   setList1(list1.filter((i) => i !== item));\n//   // };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Battery Configurator</h1>\n//       <div className=\"dashboard\">\n//       <table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th>Battery Type</th>\n//             <th>Cost/Unit</th>\n//             <th>Energy/Unit</th>\n//             <th>Quantity</th>\n//             <th>Total Cost</th>\n//             <th>Total Energy</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {data.map((item, index) => (\n//             <tr key={index}>\n//               <td>{item.name}\n//               {/* <img src={megapack_xl} alt=\"Description of the image\" /> */}\n//               </td>\n//               <td>{item.cost}</td>\n//               <td>{item.energy}</td>\n//               <td>{<div className=\"quantity-selector\">\n//               <input aria-label=\"quantity count\" max=\"1000\" min=\"0\" type=\"number\" value={2}/>\n//             </div>}</td>\n//               <td>{item.totalCost}</td>\n//               <td>{item.totalEnergy}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       </div>\n//       <div>\n//       <DragDropList/>\n//       </div>\n//       {/* <QuantitySelector /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const containerRef = useRef(null);\n  const boxRef = useRef(null);\n  const isClicked = useRef(false);\n  const coords = useRef({\n    startX: 0,\n    startY: 0,\n    lastX: 0,\n    lastY: 0\n  });\n  useEffect(() => {\n    if (!boxRef.current || !containerRef.current) return;\n    const box = boxRef.current;\n    const container = containerRef.current;\n    const onMouseDown = e => {\n      isClicked.current = true;\n      coords.current.startX = e.clientX;\n      coords.current.startY = e.clientY;\n    };\n    const onMouseUp = e => {\n      isClicked.current = false;\n      coords.current.lastX = box.offsetLeft;\n      coords.current.lastY = box.offsetTop;\n    };\n    const onMouseMove = e => {\n      if (!isClicked.current) return;\n      const nextX = e.clientX - coords.current.startX + coords.current.lastX;\n      const nextY = e.clientY - coords.current.startY + coords.current.lastY;\n      box.style.top = `${nextY}px`;\n      box.style.left = `${nextX}px`;\n    };\n    box.addEventListener('mousedown', onMouseDown);\n    box.addEventListener('mouseup', onMouseUp);\n    container.addEventListener('mousemove', onMouseMove);\n    container.addEventListener('mouseleave', onMouseUp);\n    const cleanup = () => {\n      box.removeEventListener('mousedown', onMouseDown);\n      box.removeEventListener('mouseup', onMouseUp);\n      container.removeEventListener('mousemove', onMouseMove);\n      container.removeEventListener('mouseleave', onMouseUp);\n    };\n    return cleanup;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: boxRef,\n        className: \"box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NKXPMZJXJU5XKsuxUfCF0Dy2AdY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","containerRef","boxRef","isClicked","coords","startX","startY","lastX","lastY","current","box","container","onMouseDown","e","clientX","clientY","onMouseUp","offsetLeft","offsetTop","onMouseMove","nextX","nextY","style","top","left","addEventListener","cleanup","removeEventListener","children","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rongsiu/Desktop/tesla/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// import { QuantitySelector } from \"./components/QuantitySelector\"\n\n// import { megapack, megapack_2, megapack_xl, powerpack } from './assets'; \n\n// import './App.css';\n\n// const data = [{\n//   name: \"MegapackXL\",\n//   cost: \"$120,000\",\n//   energy: \"4 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// }, {\n//   name: \"Megapack2\",\n//   cost: \"$80,000\",\n//   energy: \"3 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Megapack\",\n//   cost: \"$50,000\",\n//   energy: \"2 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Powerpack\",\n//   cost: \"$10,000\",\n//   energy: \"1 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// {\n//   name: \"Transformer\",\n//   cost: \"$10,000\",\n//   energy: \"-0.5 MWh\",\n//   totalCost:\"$1567,000\",\n//   totalEnergy: \"8MWH\",\n// },\n// ]\n\n\n// const DraggableItem = ({ item, index, onDragStart, onDragOver, onDrop, onDrag }) => {\n//   return (\n//     <div\n//       draggable\n//       onDragStart={(e) => onDragStart(e, index)}\n//       onDragOver={(e) => onDragOver(e)}\n//       onDrop={(e) => onDrop(e, index)}\n//       onDrag={(e) => onDrag(e)}\n//       style={{\n//         padding: '8px',\n//         margin: '4px 0',\n//         border: '1px solid #ccc',\n//         background: '#fff',\n//         cursor: 'move',\n//         position: 'absolute', // Ensure positioning is absolute for X-axis movement\n//         left: item.x, // Use state or props to set X-axis position\n//         top: item.y, // Use state or props to set Y-axis position\n//         transition: 'left 0.2s ease, top 0.2s ease',\n//       }}\n//     >\n//       {item.content}\n//     </div>\n//   );\n// };\n\n// const DragDropList = () => {\n//   const [items, setItems] = useState(\n//     [\n//       { id: 'item-1', content: 'Item 1', x: 0, y: 0 },\n//       { id: 'item-2', content: 'Item 2', x: 100, y: 0 },\n//       { id: 'item-3', content: 'Item 3', x: 200, y: 0 },\n//     ]\n//   );\n\n//   const [draggedItemIndex, setDraggedItemIndex] = useState(null);\n\n//   const handleDragStart = (e, index) => {\n//     setDraggedItemIndex(index);\n//     e.dataTransfer.setData('text/plain', ''); // Required for drag events\n//   };\n\n//   const handleDragOver = (e) => {\n//     e.preventDefault();\n//   };\n\n//   const handleDrag = (e) => {\n//     // Update item position based on drag events\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     // Update the item position in the state\n//     if (draggedItemIndex !== null) {\n//       setItems(prevItems => {\n//         const updatedItems = [...prevItems];\n//         updatedItems[draggedItemIndex] = { ...updatedItems[draggedItemIndex], x, y };\n//         return updatedItems;\n//       });\n//     }\n//   };\n\n//   const handleDrop = (e, dropIndex) => {\n//     e.preventDefault();\n\n//     const x = e.clientX - e.target.clientWidth / 2;\n//     const y = e.clientY - e.target.clientHeight / 2;\n\n//     const updatedItems = [...items];\n//     const draggedItem = updatedItems[draggedItemIndex];\n\n//     // Update position\n//     updatedItems[draggedItemIndex] = { ...draggedItem, x, y };\n\n//     // Reset the dragged item index\n//     setItems(updatedItems);\n//     setDraggedItemIndex(null);\n//   };\n\n//   return (\n//     <div style={{ position: 'relative', width: '500px', height: '500px', border: '1px solid #ccc' }}>\n//       {items.map((item, index) => (\n//         <DraggableItem\n//           key={item.id}\n//           item={item}\n//           index={index}\n//           onDragStart={handleDragStart}\n//           onDragOver={handleDragOver}\n//           onDrop={handleDrop}\n//           onDrag={handleDrag}\n//         />\n//       ))}\n//     </div>\n//   );\n// };\n\n// function App() {\n//   console.log(\"hirtd\")\n\n//   // const [list1, setList1] = useState(['Item 1', 'Item 2', 'Item 3']);\n//   // const [list2, setList2] = useState(['Item 4', 'Item 5']);\n\n//   // const handleDropInList1 = (item) => {\n//   //   setList1([...list1, item]);\n//   //   setList2(list2.filter((i) => i !== item));\n//   // };\n\n//   // const handleDropInList2 = (item) => {\n//   //   setList2([...list2, item]);\n//   //   setList1(list1.filter((i) => i !== item));\n//   // };\n\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Battery Configurator</h1>\n//       <div className=\"dashboard\">\n//       <table className=\"table\">\n//         <thead>\n//           <tr>\n//             <th>Battery Type</th>\n//             <th>Cost/Unit</th>\n//             <th>Energy/Unit</th>\n//             <th>Quantity</th>\n//             <th>Total Cost</th>\n//             <th>Total Energy</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {data.map((item, index) => (\n//             <tr key={index}>\n//               <td>{item.name}\n//               {/* <img src={megapack_xl} alt=\"Description of the image\" /> */}\n//               </td>\n//               <td>{item.cost}</td>\n//               <td>{item.energy}</td>\n//               <td>{<div className=\"quantity-selector\">\n//               <input aria-label=\"quantity count\" max=\"1000\" min=\"0\" type=\"number\" value={2}/>\n//             </div>}</td>\n//               <td>{item.totalCost}</td>\n//               <td>{item.totalEnergy}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       </div>\n//       <div>\n//       <DragDropList/>\n//       </div>\n//       {/* <QuantitySelector /> */}\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useEffect, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n\n  const containerRef = useRef(null);\n  const boxRef = useRef(null);\n\n  const isClicked = useRef(false);\n\n  const coords = useRef({\n    startX: 0,\n    startY: 0,\n    lastX: 0,\n    lastY: 0\n  })\n\n  useEffect(() => {\n    if (!boxRef.current || !containerRef.current) return;\n\n    const box = boxRef.current;\n    const container = containerRef.current;\n\n\n    const onMouseDown = (e) => {\n      isClicked.current = true;\n      coords.current.startX = e.clientX;\n      coords.current.startY = e.clientY;\n    }\n\n    const onMouseUp = (e) => {\n      isClicked.current = false;\n      coords.current.lastX = box.offsetLeft;\n      coords.current.lastY = box.offsetTop;\n    }\n\n    const onMouseMove = (e) => {\n      if (!isClicked.current) return;\n\n      const nextX = e.clientX - coords.current.startX + coords.current.lastX;\n      const nextY = e.clientY - coords.current.startY + coords.current.lastY;\n\n      box.style.top = `${nextY}px`;\n      box.style.left = `${nextX}px`;\n    }\n\n    box.addEventListener('mousedown', onMouseDown);\n    box.addEventListener('mouseup', onMouseUp);\n    container.addEventListener('mousemove', onMouseMove);\n    container.addEventListener('mouseleave', onMouseUp);\n\n    const cleanup = () => {\n      box.removeEventListener('mousedown', onMouseDown);\n      box.removeEventListener('mouseup', onMouseUp);\n      container.removeEventListener('mousemove', onMouseMove);\n      container.removeEventListener('mouseleave', onMouseUp);\n    }\n\n    return cleanup;\n  }, [])\n\n  return (\n    <main>\n      <div ref={containerRef} className=\"container\">\n        <div ref={boxRef} className=\"box\"></div>\n      </div>\n    </main>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,YAAY,GAAGL,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMM,MAAM,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE3B,MAAMO,SAAS,GAAGP,MAAM,CAAC,KAAK,CAAC;EAE/B,MAAMQ,MAAM,GAAGR,MAAM,CAAC;IACpBS,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE,CAAC;IACTC,KAAK,EAAE,CAAC;IACRC,KAAK,EAAE;EACT,CAAC,CAAC;EAEFb,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,MAAM,CAACO,OAAO,IAAI,CAACR,YAAY,CAACQ,OAAO,EAAE;IAE9C,MAAMC,GAAG,GAAGR,MAAM,CAACO,OAAO;IAC1B,MAAME,SAAS,GAAGV,YAAY,CAACQ,OAAO;IAGtC,MAAMG,WAAW,GAAIC,CAAC,IAAK;MACzBV,SAAS,CAACM,OAAO,GAAG,IAAI;MACxBL,MAAM,CAACK,OAAO,CAACJ,MAAM,GAAGQ,CAAC,CAACC,OAAO;MACjCV,MAAM,CAACK,OAAO,CAACH,MAAM,GAAGO,CAAC,CAACE,OAAO;IACnC,CAAC;IAED,MAAMC,SAAS,GAAIH,CAAC,IAAK;MACvBV,SAAS,CAACM,OAAO,GAAG,KAAK;MACzBL,MAAM,CAACK,OAAO,CAACF,KAAK,GAAGG,GAAG,CAACO,UAAU;MACrCb,MAAM,CAACK,OAAO,CAACD,KAAK,GAAGE,GAAG,CAACQ,SAAS;IACtC,CAAC;IAED,MAAMC,WAAW,GAAIN,CAAC,IAAK;MACzB,IAAI,CAACV,SAAS,CAACM,OAAO,EAAE;MAExB,MAAMW,KAAK,GAAGP,CAAC,CAACC,OAAO,GAAGV,MAAM,CAACK,OAAO,CAACJ,MAAM,GAAGD,MAAM,CAACK,OAAO,CAACF,KAAK;MACtE,MAAMc,KAAK,GAAGR,CAAC,CAACE,OAAO,GAAGX,MAAM,CAACK,OAAO,CAACH,MAAM,GAAGF,MAAM,CAACK,OAAO,CAACD,KAAK;MAEtEE,GAAG,CAACY,KAAK,CAACC,GAAG,GAAG,GAAGF,KAAK,IAAI;MAC5BX,GAAG,CAACY,KAAK,CAACE,IAAI,GAAG,GAAGJ,KAAK,IAAI;IAC/B,CAAC;IAEDV,GAAG,CAACe,gBAAgB,CAAC,WAAW,EAAEb,WAAW,CAAC;IAC9CF,GAAG,CAACe,gBAAgB,CAAC,SAAS,EAAET,SAAS,CAAC;IAC1CL,SAAS,CAACc,gBAAgB,CAAC,WAAW,EAAEN,WAAW,CAAC;IACpDR,SAAS,CAACc,gBAAgB,CAAC,YAAY,EAAET,SAAS,CAAC;IAEnD,MAAMU,OAAO,GAAGA,CAAA,KAAM;MACpBhB,GAAG,CAACiB,mBAAmB,CAAC,WAAW,EAAEf,WAAW,CAAC;MACjDF,GAAG,CAACiB,mBAAmB,CAAC,SAAS,EAAEX,SAAS,CAAC;MAC7CL,SAAS,CAACgB,mBAAmB,CAAC,WAAW,EAAER,WAAW,CAAC;MACvDR,SAAS,CAACgB,mBAAmB,CAAC,YAAY,EAAEX,SAAS,CAAC;IACxD,CAAC;IAED,OAAOU,OAAO;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE5B,OAAA;IAAA8B,QAAA,eACE9B,OAAA;MAAK+B,GAAG,EAAE5B,YAAa;MAAC6B,SAAS,EAAC,WAAW;MAAAF,QAAA,eAC3C9B,OAAA;QAAK+B,GAAG,EAAE3B,MAAO;QAAC4B,SAAS,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAAClC,EAAA,CAjEQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AAmEZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}