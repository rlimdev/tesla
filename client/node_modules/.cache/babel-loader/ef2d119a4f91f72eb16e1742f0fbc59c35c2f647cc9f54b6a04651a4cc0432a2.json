{"ast":null,"code":"var _jsxFileName = \"/Users/rongsiu/Desktop/tesla/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { logo, language } from './assets';\nimport { BATTERY_TYPES } from \"./constants\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [transformerCount, setTransformerCount] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [totalEnergy, setTotalEnergy] = useState(0);\n  const [totalSize, setTotalSize] = useState(0);\n  const [batteries, setBatteries] = useState([]);\n  const [counts, setCounts] = useState({\n    mpxl: 0,\n    mp2: 0,\n    mp: 0,\n    pp: 0\n  });\n  useEffect(() => {\n    getTotals();\n    getBatteries(counts);\n  }, [counts]);\n  const getBatteries = counts => {\n    const items = [];\n    const countItems = Object.entries(counts);\n    let size = 0;\n    let idx = 0;\n    countItems.forEach(([battery, count]) => {\n      while (count > 0) {\n        const item = {\n          id: `${battery}_${idx}`,\n          x: idx % 2 === 0 ? 0 : idx % 2 * size,\n          y: Math.floor(idx / 2) * 100,\n          name: BATTERY_TYPES[battery].name,\n          type: battery\n        };\n        items.push(item);\n        if (idx % 2 !== 0) {\n          items.push({\n            id: `t_${idx}`,\n            x: 900,\n            y: Math.floor(idx / 2) * 100,\n            name: BATTERY_TYPES[\"t\"].name,\n            type: \"t\"\n          });\n        }\n        count--;\n        idx++;\n        size = BATTERY_TYPES[battery].size;\n      }\n    });\n    setBatteries(items);\n  };\n  const getTransformerCount = updatedCounts => {\n    const total = Object.values(updatedCounts).reduce((acc, curr) => acc + curr, 0);\n    return Math.floor(total / 2);\n  };\n  const handleQuantityChange = (e, id) => {\n    const newCounts = {\n      ...counts,\n      [id]: parseInt(e.target.value, 10)\n    };\n    setCounts(newCounts);\n    setTransformerCount(getTransformerCount(newCounts));\n  };\n  const getTotals = () => {\n    const cost = BATTERY_TYPES.mpxl.cost * counts.mpxl + BATTERY_TYPES.mp2.cost * counts.mp2 + BATTERY_TYPES.mp.cost * counts.mp + BATTERY_TYPES.pp.cost * counts.pp + BATTERY_TYPES.t.cost * transformerCount;\n    const energy = BATTERY_TYPES.mpxl.energy * counts.mpxl + BATTERY_TYPES.mp2.energy * counts.mp2 + BATTERY_TYPES.mp.energy * counts.mp + BATTERY_TYPES.pp.energy * counts.pp + BATTERY_TYPES.t.energy * transformerCount;\n    const size = BATTERY_TYPES.mpxl.size * counts.mpxl + BATTERY_TYPES.mp2.size * counts.mp2 + BATTERY_TYPES.mp.size * counts.mp + BATTERY_TYPES.pp.size * counts.pp + BATTERY_TYPES.t.size * transformerCount;\n    setTotalCost(cost);\n    setTotalEnergy(energy);\n    setTotalSize(size);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"logo\",\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: language,\n        className: \"language\",\n        alt: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"total\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Battery Configurator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Cost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `$${totalCost.toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Energy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${totalEnergy} MWh`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Total Size\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: `${totalSize} FTÂ²`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity\",\n          children: [/*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Battery Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Cost/unit ($)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Energy/unit (MWh)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: Object.values(BATTERY_TYPES).map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.cost.toLocaleString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.energy\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: /*#__PURE__*/_jsxDEV(\"input\", {\n                      \"aria-label\": \"quantity count\",\n                      disabled: item.id === \"t\",\n                      max: \"1000\",\n                      min: \"0\",\n                      type: \"number\",\n                      value: item.id === \"t\" ? transformerCount : counts[item.id],\n                      onChange: e => handleQuantityChange(e, item.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"caption\",\n            children: \"1 transformer is added for every 2 batteries purchased\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: batteries.map(battery => /*#__PURE__*/_jsxDEV(\"div\", {\n          id: battery.id,\n          className: `battery ${battery.type}`,\n          style: {\n            left: `${battery.x}px`,\n            top: `${battery.y}px`\n          },\n          children: battery.name\n        }, battery.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Eh+XGdWw2s6L4Oc8MLfO81Su1WA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","logo","language","BATTERY_TYPES","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","transformerCount","setTransformerCount","totalCost","setTotalCost","totalEnergy","setTotalEnergy","totalSize","setTotalSize","batteries","setBatteries","counts","setCounts","mpxl","mp2","mp","pp","getTotals","getBatteries","items","countItems","Object","entries","size","idx","forEach","battery","count","item","id","x","y","Math","floor","name","type","push","getTransformerCount","updatedCounts","total","values","reduce","acc","curr","handleQuantityChange","e","newCounts","parseInt","target","value","cost","t","energy","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","map","disabled","max","min","onChange","style","left","top","_c","$RefreshReg$"],"sources":["/Users/rongsiu/Desktop/tesla/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { logo, language } from './assets';\nimport { BATTERY_TYPES } from \"./constants\"\n\nimport './App.css';\n\nfunction App() {\n  const [transformerCount, setTransformerCount] = useState(0);\n  const [totalCost, setTotalCost] = useState(0);\n  const [totalEnergy, setTotalEnergy] = useState(0);\n  const [totalSize, setTotalSize] = useState(0);\n  const [batteries, setBatteries] = useState([]);\n  const [counts, setCounts] = useState({\n    mpxl: 0,\n    mp2: 0,\n    mp: 0,\n    pp: 0,\n  });\n\n  useEffect(() => {\n    getTotals();\n    getBatteries(counts);\n  }, [counts]);\n\n  const getBatteries = (counts) => {\n    const items = [];\n    const countItems = Object.entries(counts);\n    let size = 0;\n    let idx = 0;\n\n    countItems.forEach(([battery, count]) => {\n      while (count > 0) {\n        const item = {\n          id: `${battery}_${idx}`,\n          x: idx % 2 === 0 ? 0 : idx % 2 * size,\n          y: Math.floor(idx / 2) * 100,\n          name: BATTERY_TYPES[battery].name,\n          type: battery,\n        };\n\n        items.push(item);\n\n        if(idx % 2 !== 0) {\n          items.push({\n            id: `t_${idx}`,\n            x: 900,\n            y: Math.floor(idx / 2) * 100,\n            name: BATTERY_TYPES[\"t\"].name,\n            type: \"t\",\n          })\n        }\n\n        count--;\n        idx++;\n        size = BATTERY_TYPES[battery].size;\n      }\n    });\n\n    setBatteries(items);\n  };\n\n  const getTransformerCount = (updatedCounts) => {\n    const total = Object.values(updatedCounts).reduce((acc, curr) => acc + curr, 0);\n    return Math.floor(total / 2);\n  };\n\n  const handleQuantityChange = (e, id) => {\n    const newCounts = {\n      ...counts,\n      [id]: parseInt(e.target.value, 10),\n    };\n\n    setCounts(newCounts);\n    setTransformerCount(getTransformerCount(newCounts));\n  };\n\n  const getTotals = () => {\n    const cost = BATTERY_TYPES.mpxl.cost * counts.mpxl + BATTERY_TYPES.mp2.cost * counts.mp2 + BATTERY_TYPES.mp.cost * counts.mp + BATTERY_TYPES.pp.cost * counts.pp + BATTERY_TYPES.t.cost * transformerCount;\n    const energy = BATTERY_TYPES.mpxl.energy * counts.mpxl + BATTERY_TYPES.mp2.energy * counts.mp2 + BATTERY_TYPES.mp.energy * counts.mp + BATTERY_TYPES.pp.energy * counts.pp + BATTERY_TYPES.t.energy * transformerCount;\n    const size = BATTERY_TYPES.mpxl.size * counts.mpxl + BATTERY_TYPES.mp2.size * counts.mp2 + BATTERY_TYPES.mp.size * counts.mp + BATTERY_TYPES.pp.size * counts.pp + BATTERY_TYPES.t.size * transformerCount;\n\n    setTotalCost(cost);\n    setTotalEnergy(energy);\n    setTotalSize(size);\n  };\n\n  return (\n    <>\n      <div className=\"header\">\n        <img src={logo} className=\"logo\" alt=\"Logo\" />\n        <img src={language} className=\"language\" alt=\"Language\" />\n      </div>\n\n      <div className=\"main\">\n        <div className=\"dashboard\">\n          <div className=\"total\">\n            <div className=\"title\">Battery Configurator</div>\n            <div className=\"grid-container\">\n              <div className=\"grid-item\">\n                <p>Total Cost</p>\n                <p>{`$${totalCost.toLocaleString()}`}</p>\n              </div>\n              <div className=\"grid-item\">\n                <p>Total Energy</p>\n                <p>{`${totalEnergy} MWh`}</p>\n              </div>\n              <div className=\"grid-item\">\n                <p>Total Size</p>\n                <p>{`${totalSize} FTÂ²`}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"quantity\">\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Battery Type</th>\n                  <th>Cost/unit ($)</th>\n                  <th>Energy/unit (MWh)</th>\n                  <th>Quantity</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.values(BATTERY_TYPES).map((item) => (\n                  <tr key={item.id}>\n                    <td>{item.name}</td>\n                    <td>{item.cost.toLocaleString()}</td>\n                    <td>{item.energy}</td>\n                    <td>\n                      <div>\n                        <input\n                          aria-label=\"quantity count\"\n                          disabled={item.id === \"t\"}\n                          max=\"1000\"\n                          min=\"0\"\n                          type=\"number\"\n                          value={item.id === \"t\" ? transformerCount : counts[item.id]}\n                          onChange={(e) => handleQuantityChange(e, item.id)}\n                        />\n                      </div>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <span className=\"caption\">1 transformer is added for every 2 batteries purchased</span>\n          </div>\n        </div>\n        <div className=\"container\">\n          {batteries.map((battery) => (\n            <div\n              key={battery.id}\n              id={battery.id}\n              className={`battery ${battery.type}`}\n              style={{ left: `${battery.x}px`, top: `${battery.y}px` }}\n            >\n              {battery.name}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}